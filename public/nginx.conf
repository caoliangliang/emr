user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    # tcp_nopush     on;

    keepalive_timeout  65;

    # gzip  on;

    include /etc/nginx/conf.d/*.conf;

    upstream webApi {
             server 192.168.7.20:8888; # 后端项目的api访问地址
    }

    # 以下属性中，以ssl开头的属性表示与证书配置有关。
    server {

        listen 443 ssl;
        
        # 配置HTTPS的默认访问端口为443。

        # 如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。

        # 如果您使用Nginx 1.15.0及以上版本，请使用listen 443 ssl代替listen 443和ssl on。
  
        server_name 192.168.7.20;  #需要将192.168.7.20替换成证书绑定的域名。

        ssl_certificate /etc/nginx/cert/cert.pem;  # 替换自己上传的证书文件的名称。

        ssl_certificate_key /etc/nginx/cert/cert.key; # 替换成自己上传的证书密钥文件的名称。

        ssl_session_timeout 5m;

        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;

        # 表示使用的加密套件的类型。

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # 表示使用的TLS协议的类型。

        ssl_prefer_server_ciphers on;

        location / {      
            root   /usr/share/nginx/html;  # 指定dist文件挂载目录
            index index.html index.htm;            
            try_files  $uri $uri/ @router;
        }
        
        # 解决刷新浏览器时，页面重载的问题。防止页面刷新时出现404、405的问题。
        location @router {
            rewrite ^.*$ /index.html last;
        }

         # 后端多个微服务接口通过统一网关（8888）对外暴露，nginx反向代理统一网关 
        location ~* ^/(maint|patient|mr|maa|ope|followup|data|message|hangfire|knowledge|que|treatment|technician|qc360|order|transit) { # 3.【code|auth|admin|buy】是后端各微服务接口前缀，网关按这个前缀来路由请求。
           proxy_pass http://webApi;  #代理的域名
           add_header 'Access-Control-Allow-Origin' '*'; 
           add_header 'Access-Control-Allow-Credentials' 'true';
           }
        
        # 解决登录界面刷新浏览器时无法显示页面的问题，重定向到初始化地址，让它去重新显示。
        #location /index/login {
            #proxy_pass https://blog.test.com:8081/; 
        #}
    }

  # 前端项目部署http
   server {
      listen    80;
      server_name  192.168.7.20;
      return 301 https://$host$request_uri;  # 自动将80的请求转发到443
    }
    
   #只启用http，不使用https
   # server {
        #listen 80;
        #server_name 192.168.7.20;      
 
         #location / {      
            #root   /usr/share/nginx/html;  # 指定dist文件挂载目录
            #index index.html index.htm;            
            #try_files  $uri $uri/ @router;
        #}
        
        # 解决刷新浏览器时，页面重载的问题。防止页面刷新时出现404、405的问题。
       # location @router {
            #rewrite ^.*$ /index.html last;
       # }

         # 后端多个微服务接口通过统一网关（8888）对外暴露，nginx反向代理统一网关 
        #location ~* ^/(maint|patient|mr|maa|ope|followup|data|message|hangfire|knowledge|que|treatment|technician|qc360|order|transit) { # 3.【code|auth|admin|buy】是后端各微服务接口前缀，网关按这个前缀来路由请求。
           #proxy_pass http://webApi;  #代理的域名
           #add_header 'Access-Control-Allow-Origin' '*'; 
           #add_header 'Access-Control-Allow-Credentials' 'true';
            #}
     # }
}
